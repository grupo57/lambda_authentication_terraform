name: Deploy Lambda Authentication

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Build with Maven
      run: mvn package
      working-directory: lambda_authentication

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Plan Terraform
      run: terraform plan -out=tfplan -var="environment=${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}"

    - name: Upload JAR to S3
      run: |
        aws s3 cp lambda_authentication/target/LambdaJwtCreator-6.0.0-shaded.jar s3://lambda-authentication-${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}/LambdaJwtCreator-6.0.0.jar
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Apply Terraform for Dev
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Apply Terraform for Prod
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Notify Success
      if: success()
      run: echo "Deployment successful!"